name: tests

on:
  push:
    branches: [master, main]
    tags-ignore: ['**']
    paths-ignore: ['**.md']
  pull_request:
    paths-ignore: ['**.md']

jobs:
  gitleaks:
    name: Gitleaks
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with: {fetch-depth: 0}

      - uses: zricethezav/gitleaks-action@v1.6.0 # Action page: <https://github.com/zricethezav/gitleaks-action>

  eslint:
    name: Run eslint
    runs-on: ubuntu-20.04
    env: {FORCE_COLOR: 'true'}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with: {node-version: '16'}

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --no-progress --non-interactive

      - run: yarn lint

  dist-built:
    name: Check distributive built state
    runs-on: ubuntu-20.04
    outputs:
      dist-changed: ${{ steps.state.outputs.changed }}
    env: {FORCE_COLOR: 'true'}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with: {node-version: '16'}

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --no-progress --non-interactive

      - run: yarn build

      - uses: actions/upload-artifact@v3
        with: {name: dist, path: ./dist/, retention-days: 1}

      - id: state
        run: echo "::set-output name=changed::`git diff --diff-filter=ACMUXTR --name-only | grep dist/ > /dev/null && echo 'true' || echo 'false'`"

  commit-and-push-fresh-dist:
    name: Commit and push fresh distributive
    needs: [dist-built]
    if: ${{ needs.dist-built.outputs.dist-changed == 'true' }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v2
        with: {name: dist, path: ./dist/}

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Automatic distributive rebuild

  run-this-action:
    name: Run action
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Run this action
        uses: ./
        id: dev
        with:
          token: ${{ secrets.DOPPLER_DEV_TOKEN }}
          project: ${{ secrets.DOPPLER_PROJECT }}
          config: ${{ secrets.DOPPLER_DEV_CONFIG }}
          secret-name: DB_URL

      - run: if [[ '${{ steps.dev.outputs.secret }}' != 'psql://elon@localhost/modelX' ]]; then exit 1; fi

      - uses: ./
        id: production
        with:
          token: ${{ secrets.DOPPLER_PRODUCTION_TOKEN }}
          project: ${{ secrets.DOPPLER_PROJECT }}
          config: ${{ secrets.DOPPLER_PRODUCTION_CONFIG }}
          secret-name: FEATURE_FLAGS
          save-to-file: secret_file

      - run: 'echo -ne "{\n\t\"AUTOPILOT\": true,\n\t\"TOP_SPEED\": 130\n}" > ./expected_secret'
      - run: cmp -s ./secret_file ./expected_secret || exit 1
